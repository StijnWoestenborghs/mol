# Workflow to build and test wheels.
# in the get_commit_message job include "[build wheel]" in your commit
# message to trigger the build.
name: Wheel builder

on:
    schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    - cron: "9  9 * * *"
    push:
        branches:
            - '*'
    pull_request:
        branches:
            - main
            - dev
    workflow_dispatch:

permissions:
    contents: read

concurrency:
    group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
    cancel-in-progress: true

jobs:
    get_commit_message:
        name: Get commit message
        runs-on: ubuntu-latest
        outputs:
            message: ${{ steps.commit_message.outputs.message }}
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 0
          - name: Get commit message
            id: commit_message
            run: |
              set -xe
              COMMIT_MSG=$(git log --no-merges -1)
              RUN="0"
              if [[ "$COMMIT_MSG" == *"[build wheel]"* ]]; then
                  RUN="1"
              fi
              echo "message=$RUN" >> $GITHUB_OUTPUT
              echo github.ref ${{ github.ref }}
    
    build_wheels:
        name: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
        needs: get_commit_message
        if: >-
            contains(needs.get_commit_message.outputs.message, '1') ||
            github.event_name == 'schedule' ||
            github.event_name == 'workflow_dispatch'
        runs-on: ${{ matrix.buildplat[0] }}
    
        strategy:
            # Ensure that a wheel builder finishes even if another fails
            fail-fast: false
            matrix:
                buildplat:
                # - [ubuntu-22.04, manylinux, x86_64]
                # - [ubuntu-22.04, musllinux, x86_64]
                # - [ubuntu-24.04-arm, manylinux, aarch64]
                # - [ubuntu-24.04-arm, musllinux, aarch64]
                # - [macos-13, macosx, x86_64]
                # - [macos-14, macosx, arm64]
                - [windows-2019, win, AMD64]
                python: [["cp311", "3.11"], ["cp312", "3.12"], ["cp313", "3.13"]]
                # matrix.python[0] is used to specify the python versions made by cibuildwheel
    
        env:
            # upload to dev if it's triggered by a push and a 'wheel build' commit message
            # upload to nightly on schedule or workflow_dispatch
            IS_PUSH: ${{ github.event_name == 'push' && contains(needs.get_commit_message.outputs.message, '1') }}
            IS_SCHEDULE_DISPATCH: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    
        steps:
          - name: Checkout
            uses: actions/checkout@v4
            with:
                fetch-depth: 0

          - name: Build wheels (cibuildwheel)
            uses: pypa/cibuildwheel@d04cacbc9866d432033b1d09142936e6a0e2121a # v2.23.2
            env:
                CIBW_BUILD: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}*
                CIBW_ARCHS: ${{ matrix.buildplat[2] }}
                # CIBW_PRERELEASE_PYTHONS: True
                # CIBW_FREE_THREADED_SUPPORT: True

          - uses: actions/upload-artifact@v4
            with:
                path: ./wheelhouse/*.whl
                name: ${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}-${{ matrix.buildplat[2] }}
                retention-days: 1

          # TODO: upload wheels  (possibly based on IS_PUSH or IS_SCHEDULE_DISPATCH)
          - name: Install uv
            uses: astral-sh/setup-uv@v5

          - name: Upload wheels
            if: success()
            shell: bash -el {0}
            env:
                PYPI_UPLOAD_TOKEN: ${{ secrets.PYPI_TOKEN }}
            run: |
                source .github/workflows/upload_wheels.sh
                set_upload_vars
                upload_wheels  
                